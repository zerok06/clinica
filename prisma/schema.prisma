// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model usuario {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  nombres        String
  apellidos      String
  email          String
  dni            String
  telefono       String
  createAt       DateTime       @default(now())
  updateAt       DateTime       @updatedAt
  credenciales   credenciales   @relation(fields: [credencialesId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  credencialesId String         @unique @db.ObjectId
  administrador  administrador?
  secretaria     secretaria?
  doctor         doctor?
}

model credenciales {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String   @unique
  password String
  usuario  usuario?
}

model administrador {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  usuario   usuario @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  usuarioId String  @unique @db.ObjectId
}

model secretaria {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  usuario   usuario @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  usuarioId String  @unique @db.ObjectId
}

model doctor {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  usuario   usuario @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  usuarioId String  @unique @db.ObjectId
}

model paciente {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  nombres    String
  apellidos  String
  direccion  String
  nacimiento DateTime
  edad       Int
  dni        String
  celular    String
  convenio   String
  createAt   DateTime @default(now())
}
